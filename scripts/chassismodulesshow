#!/usr/bin/python
"""
    Script to show chassis modules status.
"""
from __future__ import print_function

import argparse

from tabulate import tabulate
from swsssdk import ConfigDBConnector
from swsssdk import SonicV2Connector
from natsort import natsorted


header = ['Name', 'Description', 'Slot', 'Oper-Status', 'Admin-Status']

CHASSIS_MODULE_INFO_TABLE = 'CHASSIS_MODULE_TABLE'
CHASSIS_MODULE_INFO_KEY_TEMPLATE = 'CHASSIS_MODULE {}'
CHASSIS_MODULE_INFO_NAME_FIELD = 'name'
CHASSIS_MODULE_INFO_DESC_FIELD = 'desc'
CHASSIS_MODULE_INFO_SLOT_FIELD = 'slot'
CHASSIS_MODULE_INFO_OPERSTATUS_FIELD = 'oper_status'
CHASSIS_MODULE_INFO_ADMINSTATUS_FIELD = 'admin_status'

class ChassisModuleShow(object):
    def __init__(self):
        self.config_db = ConfigDBConnector()
        self.config_db.connect()
        self.db = SonicV2Connector(host="127.0.0.1")
        self.db.connect(self.db.STATE_DB)

    def show(self):
        chassis_cfg_table = self.config_db.get_table('CHASSIS_MODULE')

        keys = self.db.keys(self.db.STATE_DB, CHASSIS_MODULE_INFO_TABLE + '*')
        if not keys:
            print('Chassis-Module Not detected\n')
            return

        table = []
        for key in natsorted(keys):
            key_list = key.split('|')
            if len(key_list) != 2: # error data in DB, log it and ignore
                print('Warn: Invalid key in table CHASSIS_MODULE_TABLE: {}'.format(key))
                continue

            data_dict = self.db.get_all(self.db.STATE_DB, key)
            name = data_dict[CHASSIS_MODULE_INFO_NAME_FIELD]
            desc = data_dict[CHASSIS_MODULE_INFO_DESC_FIELD]
            slot = data_dict[CHASSIS_MODULE_INFO_SLOT_FIELD]
            oper_status = data_dict[CHASSIS_MODULE_INFO_OPERSTATUS_FIELD]

            admin_status = 'up'
            config_data = chassis_cfg_table.get(name)
            if config_data is not None:
                admin_status = config_data.get(CHASSIS_MODULE_INFO_ADMINSTATUS_FIELD)

            table.append((name, desc, slot, oper_status, admin_status))

        if table:
            print(tabulate(table, header, tablefmt='simple', stralign='right'))
        else:
            print('No chassis_module status data available\n')


if __name__ == "__main__":
    chassismoduleShow = ChassisModuleShow()
    chassismoduleShow.show()
